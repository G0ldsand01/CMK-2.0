---
import { cartTable, productsTable } from '@/db/schema';
import db from '@/lib/db';
import { getUser } from '@/lib/user';
import { eq } from 'drizzle-orm';
import InternalCart from './InternalCart';

interface Props {
  classes?: string;
  variant?:
    | 'outline'
    | 'default'
    | 'secondary'
    | 'ghost'
    | 'link'
    | 'destructive';
}

const { classes, variant } = Astro.props;

const user = await getUser(Astro.request);
if (!user) {
  throw new Error('User not found');
}

const cart = await db
  .select()
  .from(cartTable)
  .where(eq(cartTable.userId, user.getId()))
  .innerJoin(productsTable, eq(cartTable.productId, productsTable.id));
---

<InternalCart newCart={cart} client:load classes={classes} variant={variant}>
  <slot />
</InternalCart>
