---
import { and, eq } from 'drizzle-orm';
import { Star } from 'lucide-react';
import { type productsTable, reviewsTable } from '@/db/schema';
import db from '@/lib/db';
import { getUser } from '@/lib/user';
import ManageReview from './ManageReview';
import Reviews from './Reviews';

interface Props {
	product: typeof productsTable.$inferSelect;
}

const { product } = Astro.props;
const productId = product.id;

const user = await getUser(Astro.request);

let userReview: typeof reviewsTable.$inferSelect | null = null;
if (user) {
	const userReviewTx = await db
		.select()
		.from(reviewsTable)
		.where(
			and(
				eq(reviewsTable.userId, user.getId()),
				eq(reviewsTable.productId, productId),
			),
		);
	if (userReviewTx[0]) {
		userReview = userReviewTx[0];
	}
}

const allReviews = await db
	.select()
	.from(reviewsTable)
	.where(eq(reviewsTable.productId, productId));
---

<div class="space-y-8">
  {/* User Rating Section */}
  {
    user && (
      <div class="border-b pb-6">
        <ManageReview
          review={userReview || undefined}
          productId={productId}
          client:load
        />
      </div>
    )
  }

  {/* Rating Statistics */}
  <Reviews productId={productId} reviews={allReviews} client:load />
</div>
