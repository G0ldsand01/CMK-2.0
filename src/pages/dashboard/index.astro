---
import DashboardLayout from "@/layouts/DashboardLayout.astro";
import { Heart, ShoppingBag } from "lucide-react";
import { getSession } from "auth-astro/server";
import { Auth, SignOut } from 'auth-astro/components';
const session = await getSession(Astro.request);

if (!session) {
  return Astro.redirect("/login");
}
---

<DashboardLayout title="Dashboard">
  <div class="chip-container">
    <a href="/dashboard" class="chip active">Dashboard</a>
    <a href="/dashboard/orders" class="chip">My Orders</a>
    <a href="/dashboard/wishlist" class="chip">My Wishlist</a>
    <a href="/dashboard/settings" class="chip">My Account Settings</a>
    <a class="chip"> 
      <Auth>
        <SignOut> Logout </SignOut>
      </Auth>
    </a>
  </div>
  <div class="main-layout modern-design">
    <div class="sidebar">
      <nav>
        <ul>
          <li><a href="/dashboard" class="active">Dashboard</a></li>
          <li><a href="/dashboard/orders"> My Orders</a></li>
          <li><a href="/dashboard/wishlist">My Wishlist</a></li>
          <li><a href="/dashboard/settings">My Account Settings</a></li>
          <li><a> 
            <Auth>
              <SignOut> Logout </SignOut>
            </Auth>
          </a>
          </li>
        </ul>
        <a class="return-to-home" href="/">Return to Home</a>
      </nav>
    </div>

    <div class="content">
      <div class="head">
        <div class="welcome-message">
          <h1>Welcome Back, {session?.user?.name}</h1>
          <p>Here's your dashboard</p>
        </div>
      </div>
      <div class="menu">
        <div class="nav-to-order">
          <div class="icon">
            <ShoppingBag />
          </div>
          <h2>Orders</h2>
          <p> Check the history of all your orders & their status </p>
          <a href="/dashboard/orders">My Orders</a>
        </div>
        <div class="my-whishlist">
          <div class="icon">
            <Heart />
          </div>
          <h2>My Wishlist</h2>
          <p> Add products to your wishlist </p>
          <a href="/dashboard/wishlist">My Wishlist</a>
        </div>
      </div>
    </div>
  </div>
</DashboardLayout>

<style>
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
html, body {
    height: 100%;
    margin: 0;
    overflow-y: auto; /* Ensures vertical scrolling is enabled */
  }
  
  .container {
    min-height: 100vh; /* Ensures the container takes up full viewport height */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 20px;
  }
  /* General Reset */
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

/* Body */
body {
  font-family: Arial, sans-serif;
  background-color: #0f0f0f;
  display: flex;
  min-height: 100vh;
  flex-direction: column;
}

/* Main Layout */
.main-layout {
  display: flex;
  height: 100vh;
}

.chip-container {
  display: none;
}

/* Sidebar Styling */
.sidebar {
  margin-top: 5rem;
  width: 250px;
  background-color: #121212;
  padding: 20px;
  box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
}

.sidebar nav ul {
  list-style-type: none;
  padding: 0;
}

.sidebar nav ul li {
  padding: 15px 20px;
}

.sidebar nav ul li a {
  color: #ecf0f1;
  text-decoration: none;
  font-size: 18px;
  display: block;
  padding: 1rem;
  border-radius: 25px;
  transition: all 0.3s ease-in-out;
}

.sidebar nav ul li a:hover,
.sidebar nav ul li a.active {
  color: #121212;
  background-color: rgb(39, 174, 96);
}

/* Content Section */
.content {
  flex: 1;
  display: flex;
  flex-direction: column;
}

/* Header Styling */
.head {
  margin-top: 10rem;
  width: 50%;
  background-color: hsla(0, 0%, 20%, 0.274);
  padding: 30px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 2rem;
  margin-left: auto;
  margin-right: auto;
}

.welcome-message h1 {
  color: #27ae60;
  font-size: 28px;
}

.welcome-message p {
  color: #000000;
  font-size: 16px;
}

/* Return to Home Button */
.return-to-home {
  color: #ecf0f1;
  font-size: 16px;
  text-decoration: none;
  display: block;
  position: absolute;
  bottom: 20px;
  left: 20px;
  padding: 10px;
  background-color: #27ae60;
  border-radius: 5px;
  transition: all 0.3s ease-in-out;
}

.return-to-home:hover {
  background-color: #20c464;
}

/* Menu Section */
.menu {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 5rem;
  width: 50%;
  flex-wrap: wrap;
  margin-left: auto;
  margin-right: auto;
}

.icon {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  background-color: #121212;
  color: #fff;
  margin: auto;
}

.nav-to-order,
.my-whishlist {
  /*Glassmorphism*/ 
  background: hsla(0, 0%, 20%, 0.274);
  color: #000; /* Texte plus fonc√© pour le contraste */
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3); /* Ombre subtile */
  backdrop-filter: blur(6px);
  -webkit-backdrop-filter: blur(6px);
  flex: 1 1 45%;
  text-align: center;
  border: #121212 2px solid;
  border-radius: 16px;
  margin: 10px;
  padding: 20px;
  width: 10rem;
  height: 20rem;
  transition: transform 0.3s ease-in-out;
}

.nav-to-order:hover,
.my-whishlist:hover {
  transform: scale(1.05);
}

.nav-to-order h2,
.my-whishlist h2 {
  color: #f3f4f5;
  font-size: 24px;
  margin-bottom: 10px;
}

.nav-to-order p,
.my-whishlist p {
  color: #f3f4f5;
  font-size: 16px;
  margin-bottom: 10px;
}

.nav-to-order a,
.my-whishlist a {
  background-color: #27ae60;
  color: #fff;
  text-decoration: none;
  padding: 10px;
  border-radius: 5px;
  transition: background-color 0.3s ease-in-out;
  width: 10rem;
  margin-left: auto;
  margin-right: auto;
  display: block;
}

.nav-to-order a:hover,
.my-whishlist a:hover {
  background-color: #20c464;
}
@media (max-width: 1300px) {
  .head {
    width: 70%;
    padding: 20px;
    border-radius: 1rem;
    
  }
  .menu {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 5rem;
    width: 90%;
    flex-wrap: wrap;
    margin-left: auto;
    margin-right: auto;
  }
  
}
/* Responsive Design */
@media (max-width: 768px) {
  .sidebar {
    display: none;
  }

  .chip-container {
    margin-top: 6rem;
    display: flex;
    gap: 10px;
    padding: 10px;
    justify-content: center;
    flex-wrap: wrap;
  }

  .chip {
    background-color: rgb(39, 174, 96);
    color: #fff;
    padding: 8px 16px;
    border-radius: 25px;
    text-decoration: none;
    font-size: 16px;
    transition: all 0.3s ease-in-out;
    flex: 1 1 40%;
    text-align: center;
  }

  .chip:hover {
    background-color: #1abc9c;
  }
  .head {
    width: 70%;
    padding: 20px;
    border-radius: 1rem;
    margin-top: 2rem;
  }
  /* Menu Section */
  .menu {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-top: 5rem;
    width: 90%;
    flex-wrap: wrap;
    margin-left: auto;
    margin-right: auto;
  }
}

@media (max-width: 480px) {
  .chip {
    flex: 1 1 100%;
  }

  .nav-to-order,
  .my-whishlist {
    flex: 1 1 100%;
  }
  .head {
    width: 90%;
    padding: 20px;
    border-radius: 1rem;
    margin-top: 2rem;
  }
}
</style>

<script>
  // JavaScript to toggle popover visibility
  const popoverTrigger = document.getElementById("popoverTrigger");
  const popoverContent = document.getElementById("popoverContent");
  const closePopover = document.getElementById("closePopover");

  if (popoverTrigger) {
    popoverTrigger.addEventListener("click", () => {
      if (popoverContent) {
        popoverContent.style.display =
          popoverContent.style.display === "none" ? "block" : "none";
        handlePopoverPosition();
      }
    });
  }

  if (closePopover) {
    closePopover.addEventListener("click", () => {
      if (popoverContent) {
        popoverContent.style.display = "none";
      }
    });
  }

  const handlePopoverPosition = () => {
    if (!popoverTrigger || !popoverContent) return;

    const triggerRect = popoverTrigger.getBoundingClientRect();
    const popoverRect = popoverContent.getBoundingClientRect();
    const viewportWidth = window.innerWidth;
    const viewportHeight = window.innerHeight;

    let positionClass = "bottom-edge"; // Default position

    // Check if the popover would go out of the right edge
    if (triggerRect.right + popoverRect.width > viewportWidth) {
      positionClass = "right-edge";
      popoverContent.style.left = `${triggerRect.left - popoverRect.width + triggerRect.width}px`;
    } else {
      popoverContent.style.left = `${triggerRect.left}px`;
    }

    // Check if the popover would go out of the bottom edge
    if (triggerRect.bottom + popoverRect.height > viewportHeight) {
      positionClass = "top-edge";
      popoverContent.style.top = `${triggerRect.top - popoverRect.height}px`;
    } else {
      popoverContent.style.top = `${triggerRect.bottom}px`;
    }

    popoverContent.classList.add(positionClass);
  };
</script>
