---
import "@styles/dashboard.css";
import DashboardLayout from "@/layouts/DashboardLayout.astro";
import { getSession } from "auth-astro/server";
import { Auth, SignOut } from "auth-astro/components";
const session = await getSession(Astro.request);

if (!session || !session.user) {
  return Astro.redirect("/login");
}
---

<DashboardLayout title="Dashboard">
  <div class="chip-container">
    <a href="/dashboard" class="chip active">Dashboard</a>
    <a href="/dashboard/orders" class="chip">My Orders</a>
    <a href="/dashboard/wishlist" class="chip">My Wishlist</a>
    <a href="/dashboard/settings" class="chip">My Account Settings</a>
    <a class="chip">
      <Auth>
        <SignOut>Logout</SignOut>
      </Auth>
    </a>
  </div>
  <div class="main-layout modern-design">
    <div class="sidebar">
      <nav>
        <ul>
          <li><a href="/dashboard">Dashboard</a></li>
          <li><a href="/dashboard/orders"> My Orders</a></li>
          <li><a href="/dashboard/wishlist">My Wishlist</a></li>
          <li>
            <a href="/dashboard/settings" class="active">My Account Settings</a>
          </li>
            <a class="logout">
              <Auth>
                <SignOut>Logout</SignOut>
              </Auth>
            </a>
          
        </ul>
        <a class="return-to-home" href="/">Return to Home</a>
      </nav>
    </div>

    <div class="content">
      <div class="head">
        <div class="welcome-message">
          <h1>Welcome Back, {session.user.name}</h1>
          <p>Here's your dashboard</p>
        </div>
      </div>
      <div class="settings">
        <div class="settings-list">
          <div class="settings-list-header">
            <h2>Settings</h2>
            <p2>Manage your account settings</p2>
            <div class="settings-list-body">
              <form action="/update-settings" method="POST">
                <div class="settings-list-body-item">
                  <p2>Display Name</p2>
                  <input
                    type="text"
                    name="displayName"
                    class="inputs"
                    id="displayName"
                    value={session.user.name}
                    required
                  />
                  <p2>First Name</p2>
                  <input
                    type="text"
                    name="fistName"
                    class="inputs"
                    id="fistName"
                    value={session.user.name}
                    required
                  />
                  <p2>Last Name</p2>
                  <input
                    type="text"
                    name="lastName"
                    class="inputs"
                    id="lastName"
                    value={session.user.name}
                    required
                  />
                  <p2>Phone</p2>
                  <input
                    type="tel"
                    name="phone"
                    class="inputs"
                    id="phone"
                    value={session.user.name}
                    required
                  />
                  <p2>Address</p2>
                  <input
                    type="text"
                    name="address"
                    class="inputs"
                    id="address"
                    value={session.user.name}
                    required
                  />
                  <p2>City</p2>
                  <input
                    type="text"
                    name="city"
                    class="inputs"
                    id="city"
                    value={session.user.name}
                    required
                  />
                  <p2>State</p2>
                  <input
                    type="text"
                    name="state"
                    class="inputs"
                    id="state"
                    value={session.user.name}
                    required
                  />
                  <p2>Zip</p2>
                  <input
                    type="text"
                    name="zip"
                    class="inputs"
                    id="zip"
                    value={session.user.name}
                    required
                  />
                  <p2>Country</p2>
                  <input
                    type="text"
                    name="country"
                    class="inputs"
                    id="country"
                    value={session.user.name}
                    required
                  />
                  <p2>Email</p2>
                  <input
                    type="email"
                    name="email"
                    class="inputs"
                    id="email"
                    value={session.user.email}
                    required
                  />
                  <button type="submit">Save</button>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
      <style>
        html, body{
          height: 100%;
        }
        .logout{
          text-decoration: none;
          color: white;
          font-size: 1.5rem;
          padding: 0.5rem 1rem;
          border-radius: 5px;
          background-color: transparent;
        }
        a {
          text-decoration: none;
          color: white;
          background-color: transparent;
        }
        /* General Reset */
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
        }

        /* Body */
        body {
          font-family: "Roboto", sans-serif;
          background-color: #f4f4f4;
          display: flex;
          min-height: 100vh;
          flex-direction: column;
        }

        /* Main Layout */
        .main-layout {
          display: flex;
          height: 100vh;
        }

        /* Sidebar Styling */
        .sidebar {
          margin-top: 5rem;
          width: 250px;
          background-color: #121212;
          padding: 20px;
          box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
          height: 150vh;
        }

        .sidebar nav ul {
          list-style-type: none;
          padding: 0;
        }

        .sidebar nav ul li {
          padding: 15px 20px;
        }

        .sidebar nav ul li a {
          color: #ecf0f1;
          text-decoration: none;
          font-size: 18px;
          display: block;
          padding: 1rem;
          border-radius: 25px;
          transition: all 0.3s ease-in-out;
        }

        .sidebar nav ul li a:hover,
        .sidebar nav ul li a.active {
          color: #121212;
          background-color: rgb(39, 174, 96);
        }

        /* Content Section */
        .content {
          flex: 1;
          display: flex;
          flex-direction: column;
          padding: 20px;
        }

        /* Header Styling */
        .head {
          margin-top: 5em;
          width: 100%;
          background-color: #fff;
          padding: 20px;
          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
          display: flex;
          justify-content: space-between;
          align-items: center;
        }

        .welcome-message {
          flex: 1;
        }

        .welcome-message h1 {
          color: #2c3e50;
          font-size: 24px;
          margin-bottom: 5px;
        }

        .welcome-message p {
          color: #7f8c8d;
          font-size: 16px;
        }

        /* Settings Section */
        .settings {
          background-color: #fff;
          padding: 20px;
          box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
          border-radius: 8px;
          margin-top: 30px;
        }

        .settings h2 {
          color: #2c3e50;
          font-size: 26px;
          margin-bottom: 15px;
        }

        .settings p2 {
          color: #7f8c8d;
          font-size: 16px;
          margin-bottom: 20px;
        }

        .settings-list-body {
          display: grid;
          grid-template-columns: 1fr 1fr;
          gap: 20px;
        }

        .settings-list-body-item .labels {
          font-size: 14px;
          color: #2c3e50;
          margin-bottom: 5px;
          display: block;
        }

        .settings-list-body-item .inputs {
          width: 100%;
          padding: 12px;
          border: 1px solid #ddd;
          border-radius: 8px;
          font-size: 16px;
          margin-bottom: 15px;
          transition: border-color 0.3s ease;
        }

        .settings-list-body-item input:focus {
          border-color: rgb(39, 174, 96);
        }

        /* Button Styling */
        button {
          background-color: rgb(39, 174, 96);
          color: #fff;
          padding: 12px 20px;
          border: none;
          border-radius: 8px;
          cursor: pointer;
          font-size: 16px;
          transition: background-color 0.3s ease;
          width: 100%;
          margin-top: 20px;
        }

        button:hover {
          background-color: #1abc9c;
        }
        .chip-container {
          display: none;
        }
        .sidebar .return-to-home a {
          position: relative;
          bottom: 2rem;

          margin-top: 1rem;
          display: flex;
          justify-content: center;
          align-items: center;
          gap: 1rem;
        }
        /* Responsive Design */
        @media (max-width: 768px) {
          .sidebar {
            display: none;
          }

          .chip-container {
            margin-top: 6rem;
            display: flex;
            gap: 10px;
            padding: 10px;
            justify-content: center;
            flex-wrap: wrap;
          }

          .chip {
            background-color: rgb(39, 174, 96);
            color: #fff;
            padding: 8px 16px;
            border-radius: 25px;
            text-decoration: none;
            font-size: 16px;
            transition: all 0.3s ease-in-out;
            flex: 1 1 40%;
            text-align: center;
          }

          .chip:hover {
            background-color: #1abc9c;
          }
        }

        @media (max-width: 480px) {
          .chip {
            flex: 1 1 100%;
          }
          .nav-to-order,
          .my-whishlist {
            flex: 1 1 100%;
          }
          .settings-list-body {
            grid-template-columns: 1fr;
          }
        }
      </style>
      <script>
        // JavaScript to toggle popover visibility
        const popoverTrigger = document.getElementById("popoverTrigger");
        const popoverContent = document.getElementById("popoverContent");
        const closePopover = document.getElementById("closePopover");

        if (popoverTrigger) {
          popoverTrigger.addEventListener("click", () => {
            if (popoverContent) {
              popoverContent.style.display =
                popoverContent.style.display === "none" ? "block" : "none";
              handlePopoverPosition();
            }
          });
        }

        if (closePopover) {
          closePopover.addEventListener("click", () => {
            if (popoverContent) {
              popoverContent.style.display = "none";
            }
          });
        }

        const handlePopoverPosition = () => {
          if (!popoverTrigger || !popoverContent) return;

          const triggerRect = popoverTrigger.getBoundingClientRect();
          const popoverRect = popoverContent.getBoundingClientRect();
          const viewportWidth = window.innerWidth;
          const viewportHeight = window.innerHeight;

          let positionClass = "bottom-edge"; // Default position

          // Check if the popover would go out of the right edge
          if (triggerRect.right + popoverRect.width > viewportWidth) {
            positionClass = "right-edge";
            popoverContent.style.left = `${triggerRect.left - popoverRect.width + triggerRect.width}px`;
          } else {
            popoverContent.style.left = `${triggerRect.left}px`;
          }

          // Check if the popover would go out of the bottom edge
          if (triggerRect.bottom + popoverRect.height > viewportHeight) {
            positionClass = "top-edge";
            popoverContent.style.top = `${triggerRect.top - popoverRect.height}px`;
          } else {
            popoverContent.style.top = `${triggerRect.bottom}px`;
          }

          popoverContent.classList.add(positionClass);
        };
      </script>
    </div>
  </div>
</DashboardLayout>
