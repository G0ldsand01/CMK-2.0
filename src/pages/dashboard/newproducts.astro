---
import DashboardLayout from '@/layouts/DashboardLayout.astro';
import { getUser } from '@/lib/user';
const user = await getUser(Astro.request);

if (!user || !user.isAdmin()) {
  return Astro.redirect('/dashboard');
}
---

<DashboardLayout title="Add New Products" activeId="newproducts">
  <div class="content">
    <div class="head">
      <div class="welcome-message">
        <h1>Add New Products</h1>
        <p>Manage your account settings</p>
      </div>
    </div>

    <form>
      <label for="name">Product Name:</label>
      <input type="text" name="name" id="name" class="inputs" required />
      <label for="price">Price:</label>
      <input type="number" name="price" id="price" class="inputs" required />
      <label for="description">Description:</label>
      <textarea name="description" id="description" class="inputs" required
      ></textarea>
      <label for="image">Image URL:</label>
      <input type="text" name="image" id="image" class="inputs" required />
      <label for="category">Category:</label>
      <select name="category" id="category" class="inputs" required>
        <option value="electronics">Electronics</option>
        <option value="clothing">Clothing</option>
        <option value="accessories">Accessories</option>
        <option value="toys">Toys</option>
        <option value="home">Home</option>
        <option value="beauty">Beauty</option>
        <option value="grocery">Grocery</option>
      </select>
      <label for="stock">Stock:</label>
      <input type="number" name="stock" id="stock" class="inputs" required />
      <label for="sku">id:</label>
      <input type="text" name="id" id="id" class="inputs" required />
      <button type="submit">Add Product</button>
    </form>
  </div>
</DashboardLayout>

<script>
  import { actions } from 'astro:actions';

  const form = document.querySelector('form');
  form?.addEventListener('submit', async (event) => {
    event.preventDefault();
    const formData = new FormData(form);
    const highestId = await actions.products.getHighestId();
    const { error } = await actions.products.addProduct({
      name: formData.get('name') as string,
      price: Number(formData.get('price')),
      description: formData.get('description') as string,
      image: formData.get('image') as string,
      category: formData.get('category') as string,
      stock: formData.get('stock') ? Number(formData.get('stock')) : 0,
      id: formData.get('id')
        ? Number(formData.get('id'))
        : highestId.data
          ? highestId.data + 1
          : 1,
    });
    if (!error) {
      alert('Product added successfully');
    } else {
      alert('Error adding product');
    }
    form.reset();
  });
</script>

<style>
  /* Body */
  body {
    font-family: Arial, sans-serif;
    background-color: #0f0f0f;
    display: flex;
    min-height: 100vh;
    flex-direction: column;
  }
  /* Content Section */
  .content {
    flex: 1;
    display: flex;
    flex-direction: column;
    margin-top: 2rem;
  }

  /* Header Styling */
  .head {
    margin-top: 5rem;
    width: 50%;
    background-color: hsla(0, 0%, 20%, 0.274);
    padding: 30px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2);
    border-radius: 2rem;
    margin-left: auto;
    margin-right: auto;
    text-align: center;
  }

  .welcome-message h1 {
    color: #27ae60;
    font-size: 28px;
  }

  .welcome-message p {
    color: #666;
    font-size: 16px;
  }
  /* Settings Section */
  form {
    margin-top: 3rem;
    background-color: #1e1e1e;
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);
    max-width: 50%;
    margin-left: auto;
    margin-right: auto;
  }
  .form-group {
    display: flex;
    flex-wrap: wrap;
    gap: 10px;
  }

  .form-group label {
    flex: 1 1 100%;
  }

  .form-group .input-container {
    flex: 1;
    min-width: 150px;
  }

  .full-width {
    flex: 1 1 100%;
  }

  @media (max-width: 600px) {
    .form-group {
      flex-direction: column;
    }
    .form {
      min-height: 80%;
    }
  }
  .settings-list-body-item {
    display: grid;
    grid-template-columns: 1fr;
    gap: 1rem;
  }

  .names,
  .adresse {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: 1rem;
  }

  .full-width {
    grid-column: span 2;
  }
  label {
    color: #fff;
    font-weight: bold;
  }

  .inputs {
    width: 100%;
    padding: 12px;
    border: 2px solid #27ae60;
    border-radius: 8px;
    background-color: #121212;
    color: #ecf0f1;
    outline: none;
    transition: border 0.3s ease-in-out;
  }

  .inputs:focus {
    border-color: #20c464;
    box-shadow: 0 0 8px rgba(39, 174, 96, 0.7);
  }

  button[type='submit'] {
    margin-top: 1.5rem;
    background-color: #27ae60;
    color: #fff;
    padding: 12px 24px;
    border: none;
    border-radius: 8px;
    cursor: pointer;
    transition: background 0.3s ease-in-out;
    width: 100%;
  }

  button[type='submit']:hover {
    background-color: #20c464;
  }
  * {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
  }
  html,
  body {
    height: 100%;
    margin: 0;
    overflow-y: auto; /* Ensures vertical scrolling is enabled */
  }

  .container {
    min-height: 100vh; /* Ensures the container takes up full viewport height */
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: 20px;
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .head {
      width: 100%;
      padding: 20px;
      border-radius: 1rem;
      margin-top: 2rem;
    }
    .content {
      padding: 20px;
      text-align: center;
    }

    .head {
      width: 100%;
      padding: 20px;
      border-radius: 1rem;
    }

    form {
      max-width: 100%; /* Full width on mobile */
      padding: 1.5rem;
      margin-bottom: 2rem;
      min-height: 80%;
    }
    .names,
    .adresse {
      grid-template-columns: 1fr;
    }
  }

  @media (max-width: 480px) {
    .chip {
      flex: 1 1 100%;
    }
  }
</style>
