---
import { CDN_URL } from 'astro:env/client';
import type { Product } from '@/store';
import { ordersTable, productsTable } from "@/db/schema";
import AdminDashboardLayout from "@/layouts/AdminDashboardLayout.astro";
import db from "@/lib/db";
import { getUser } from "@/lib/user";
import { eq, inArray } from "drizzle-orm";

const user = await getUser(Astro.request);
if (!user || !user.isAdmin()) {
  throw Astro.redirect("/login");
}

const { id } = Astro.params;

const [order] = await db
  .select({
    id: ordersTable.id,
    status: ordersTable.status,
    cartJSON: ordersTable.cartJSON,
    createdAt: ordersTable.createdAt,
  })
  .from(ordersTable)
  .where(eq(ordersTable.id, Number(id)));

if (!order) {
  throw Astro.redirect("/dashboard/admin/orders");
}

// Extract product IDs
const productIds = order.cartJSON.map((item) => item.products.id);
const products = await db
  .select()
  .from(productsTable)
  .where(inArray(productsTable.id, productIds));
// Combine cart and product data
const orderItems = order.cartJSON
  .map((item) => {
    const product = products.find((p) => p.id === item.products.id);
    return {
      ...item,
      product,
    };
  })
  .filter((item) => item.product); // remove items where product is undefined

const totalPrice = orderItems.reduce((sum, item) => {
  return sum + (Number(item.product?.price) || 0) * item.cart.quantity;
}, 0);

const orderData = {
  id: order.id,
  status: order.status,
  createdAt: order.createdAt,
  items: Array.isArray(orderItems) ? orderItems : [],
  total: totalPrice,
};
const missingIds = productIds.filter(
  (id) => !products.find((p) => p.id === id)
);
if (missingIds.length) {
  console.warn("Produits manquants dans la DB:", missingIds);
}
---

<AdminDashboardLayout
  title="Order"
  breadcrumb={{
    "/orders": "Manage Orders",
    [`/order/${id}`]: `Order ${id}`,
  }}
>
  <div class="content">
    <div class="admin-order-head">
      <div class="welcome-message">
        <h1>Order Details</h1>
        <p>Manage your account settings</p>
      </div>
    </div>

    <div class="order-details">
      <div class="order-details-item">
        <div class="order-details-item-title"><h1>Order ID</h1></div>
        <div class="order-details-item-value">{orderData.id}</div>
      </div>
      <div class="order-details-item">
        <div class="order-details-item-title"><h1>Status</h1></div>
        <div class="order-details-item-value">{orderData.status}</div>
      </div>
      <div class="order-details-item">
        <div class="order-details-item-title"><h1>Created At</h1></div>
        <div class="order-details-item-value">{orderData.createdAt}</div>
      </div>

      <div class="order-details-item">
        <div class="order-details-item-title"><h1>Order Content</h1></div>
        <div class="order-details-item-value">
          {
            orderData.items.length > 0 ? (
              orderData.items.map((item) => (
                <div class="product-item">
                  <img
                    src={`${CDN_URL}${item.product?.image}`}
                    alt={item.product?.name}
                    width="50"
                  />
                  <div>
                    <strong>{item.product?.name}</strong>
                    <br />
                    Quantity: {item.cart.quantity}
                    <br />
                    Price: ${item.product?.price} each
                    <br />
                    Total: ${item.cart.quantity * Number(item.product?.price)}
                  </div>
                </div>
              ))
            ) : (
              <div>Aucun produit trouv√© pour cette commande.</div>
            )
          }
        </div>
      </div>

      <div class="order-details-item">
        <div class="order-details-item-title">Total</div>
        <div class="order-details-item-value">
          ${orderData.total}
        </div>
      </div>
      <div class="order-actions">
        <div class="back">
          <a href={`/dashboard/admin/orders/`} class="go-to-order-list">
            <button>Back to Order List</button>
          </a>
        </div>
        <div class="actions">
          <form
            method="POST"
            action={`/api/orders/${order.id}/refund`}
            style="display:inline;"
          >
            <button type="submit" class="refund-button"> Refund </button>
          </form>
          <form
            method="POST"
            action={`/api/orders/${order.id}/cancel`}
            style="display:inline;"
          >
            <button type="submit" class="cancel-button"> Cancel </button>
          </form>
        </div>
      </div>
    </div>
  </div>
</AdminDashboardLayout>

<style>
  .content {
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    margin-top: 2rem;
    margin-left: auto;
    margin-right: auto;
    width: 50%;
  }

  .admin-order-head {
    display: flex;
    justify-content: space-between;
    align-items: center;
    width: 100%;
    background-color: var(--color-muted);
    padding: 30px;
    box-shadow: 0 4px 12px var(--color-shadow);
    border-radius: 2rem;
    margin-left: auto;
    margin-right: auto;
  }

  .welcome-message {
    display: flex;
    flex-direction: column;
    align-items: center;
    text-align: center;
    margin-left: auto;
    margin-right: auto;
  }

  .welcome-message h1 {
    font-size: 1.5rem;
    margin-bottom: 0.5rem;
    display: flex;
    justify-content: center;
  }

  .welcome-message p {
    font-size: 1rem;
    margin-bottom: 0;
  }

  .order-details {
    background-color: var(--color-muted);
    padding: 2rem;
    border-radius: 12px;
    box-shadow: 0 4px 10px var(--color-shadow);
    display: flex;
    flex-direction: column;
    gap: 1rem;
    margin-top: 2rem;
    margin-bottom: 5rem;
  }

  .order-details-item {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .order-details-item-title {
    font-weight: bold;
    font-size: 1rem;
  }

  .order-details-item-value {
    font-size: 1rem;
  }

  .product-item {
    display: flex;
    align-items: center;
    gap: 1rem;
    border-bottom: 1px solid #444;
    padding: 1rem 0;
  }

  .product-item img {
    border-radius: 0.5rem;
  }

  .order-actions {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
    justify-content: right;
  }
  .go-to-order {
    display: flex;
    position: relative;
  }
  .back button {
    display: flex;
    justify-content: center; /* Center horizontally */
    align-items: center; /* Center vertically */
    text-align: center;
    padding: 0.5rem 1rem; /* Normal button padding */
    border-radius: 0.5rem;
    background-color: var(--color-foreground);
    color: var(--color-background);
    width: 100%; /* Optional: make it full width */
  }

  .back button:hover {
    background-color: var(--color-foreground-hover);
    color: var(--color-foreground);
    border: 1px solid var(--color-foreground);
  }
  .order-actions {
    display: flex;
    gap: 0.5rem;
    margin-top: 1rem;
    justify-content: space-between;
    
  }

  .order-actions button {
    padding: 0.5rem 1rem;
    border-radius: 0.5rem;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
  }
  .go-to-order-button {
    background-color: var(--button-background);
    color: var(--button-text);
  }
  .go-to-order-button:hover {
    background-color: var(--color-foreground-hover);
    color: var(--color-background);
  }

  .action {
    display: flex;
    justify-content: center;
    align-items: center;
    gap: 0.5rem;
    
  }
  .refund-button {
    background-color: #ffc107;
    color: var(--color-background);
    border: solid 1px #ffc107;
    margin-left: 2rem;
  }

  .refund-button:hover {
    background-color: #e0a800c4;
    color: var(--color-foreground);
    border: solid 1px #e0a800;
  }

  .cancel-button {
    background-color: #dc3545;
    color: var(--color-foreground);
    margin-left: 2rem;
  }

  .cancel-button:hover {
    background-color: #c82333b9;
    color: var(--color-foreground);
    border: solid 1px #c82333;
  }
  @media (max-width: 1400px) {
    .content {
      width: 90%;
    }
    .admin-order-head {
      width: 90%;
      margin-bottom: 5rem;
    }

    .order-details {
      margin: auto;
      width: 90%;
      margin-bottom: 5rem;
    }
    .order-details-item {
      margin-bottom: 1rem;
      font-size: 0.8rem;
    }
    .order-actions {
      flex-direction: column;
      gap: 0.5rem;
    }
    .order-actions button {
      width: 100%;
    }
    .go-to-order-button {
      width: 100%;
    }

    .refund-button {
      width: 100%;
      padding: 0.5rem 0;
      margin-top: 1rem;
      margin-bottom: 1rem;
      margin-left: 0;
    }
    .cancel-button {
      width: 100%;
      padding: 0.5rem 0;
      margin-bottom: 1rem;
      margin-left: 0;
    }
  }
  /* Responsive Breakpoints */
  @media (max-width: 900px) {
    .content {
      width: 90%;
    }
    .admin-order-head {
      flex-direction: column;
      padding: 20px;
    }
    .product-item {
      flex-direction: column;
      align-items: flex-start;
    }
    .order-actions {
      flex-direction: column;
      align-items: stretch;
    }
    .order-actions button {
      width: 100%;
    }
    .cancel-button {
      margin-left: 0;
    }
    .refund-button {
      margin-left: 0;
    }
  }
  @media (max-width: 600px) {
    .content {
      width: 90%;
    }
    .head {
      width: 90%;
      margin-bottom: 5rem;
    }
    .order-details {
      margin: auto;
      width: 90%;
      margin-bottom: 5rem;
    }
    .order-details-item {
      margin-bottom: 1rem;
      font-size: 0.8rem;
    }
    .order-actions {
      flex-direction: column;
      gap: 0.5rem;
    }
    .order-actions button {
      width: 100%;
    }
    .go-to-order-button {
      width: 100%;
    }

    .refund-button {
      width: 100%;
      padding: 0.5rem 0;
      margin-top: 1rem;
      margin-bottom: 1rem;
      margin-left: 0;
    }
    .cancel-button {
      width: 100%;
      padding: 0.5rem 0;
      margin-bottom: 1rem;
      margin-left: 0;
    }
  }
  @media (max-width: 400px) {
    .content {
      width: 90%;
    }
    .head {
      width: 90%;
      margin-bottom: 5rem;
    }
    .order-details {
      margin: auto;
      width: 90%;
      margin-bottom: 5rem;
    }
    .order-details-item {
      margin-bottom: 1rem;
      font-size: 0.8rem;
    }
    .order-actions {
      flex-direction: column;
      gap: 0.5rem;
    }
    .order-actions button {
      width: 100%;
    }
    .go-to-order-button {
      width: 100%;
    }

    .refund-button {
      width: 100%;
      padding: 0.5rem 0;
      margin-top: 1rem;
      margin-bottom: 1rem;
      margin-left: 0;
    }
    .cancel-button {
      width: 100%;
      padding: 0.5rem 0;
      margin-bottom: 1rem;
      margin-left: 0;
    }
  }
</style>
