---
import { getUser } from '@/lib/user';
import { getAllUsers, updateUser, deleteUser } from '@/lib/userService';
import { actions } from 'astro:actions';
import AdminDashboardLayout from '@/layouts/AdminDashboardLayout.astro';

const user = await getUser(Astro.request);

if (!user || !user.isAdmin()) {
  return Astro.redirect('/dashboard');
}

// Get all users from the database
const users = await getAllUsers();
---

<AdminDashboardLayout title="Users" breadcrumb={{
  '/users': 'Manage Users',
}}>
    <div class="content">
        <div class="head">
            <div class="welcome-message">
                <h1>Users</h1>
                <p>Manage Users</p>
            </div>
        </div>
        <div class="table-container">
            <table>
                <thead>
                    <tr>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Role</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    {users.map((user) => (
                        <tr key={user.id}>
                            <td>{user.username}</td>
                            <td>{user.email}</td>
                            <td>
                                <select onchange={`updateUser(${user.id}, this.value)`}>
                                    <option value="user" selected={user.role === 'user'}>User</option>
                                    <option value="admin" selected={user.role === 'admin'}>Admin</option>
                                </select>
                            </td>
                            <td>
                                <a href={`/users/view/${user.id}`}>View</a>
                                <a href={`/users/edit/${user.id}`}>Edit</a>
                                <button onclick={`deleteUser(${user.id})`}>Delete</button>
                            </td>
                        </tr>
                    ))}
                </tbody>
            </table>    
        </div>
    </div>
</AdminDashboardLayout>

<script>
    async function updateUser(userId, role) {
        await fetch(`/api/users/update`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ id: userId, role })
        });
        location.reload();
    }

    async function deleteUser(userId) {
        if (confirm('Are you sure you want to delete this user?')) {
            await fetch(`/api/users/delete`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ id: userId })
            });
            location.reload();
        }
    }
</script>