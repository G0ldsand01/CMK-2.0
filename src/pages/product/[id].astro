---
import { Image } from 'astro:assets';
import { products as productsActions } from '../../actions/products';
import Layout from '../../layouts/Layout.astro';
import '../../styles/product.css';
import { Heart, ShoppingCart } from 'lucide-react';
import ReviewSection from '@/components/ReviewSection.astro';
import Cart from '@/components/cart/Cart.astro';
import { getUser } from '@/lib/user';
const { id } = Astro.params;
const productActions = await Astro.callAction(productsActions.getProductById, {
  id: Number(id),
});
const data = productActions.data;
const user = await getUser(Astro.request);

if (!data) {
  return Astro.redirect('/');
}

const { product, isInWishlist } = data;
---

<Layout title={product ? 'Viewing: ' + product.name : 'Product'} navbar>
  {
    product ? (
      <div class="product-details">
        <div class="product">
          <div
            class={`add-to-wishlist-button ${
              isInWishlist ? 'add-to-wishlist-button-active' : ''
            }`}
            id="add-to-wishlist-button"
            product-id={id}
          >
            <Heart />
          </div>
          <div class="product-info">
            <Image
              src={'/api/image/' + product.image + '.png'}
              alt={product.name}
              width={400}
              height={400}
            />
            <h3>{product.name}</h3>
            <p>{product.description}</p>
            <div class="product-rating">
              <span class="product-rating-stars">
                {/* {'â˜…'.repeat(Math.floor(Number(product.rating || 0)))}{' '} */}
              </span>
              <span class="product-rating-count">
                {/* ({product.reviews || 0} reviews) */}
              </span>
            </div>
            <div class="product-price">
              <span class="product-price-currency">$</span>
              <span class="product-price-amount">
                {Number(product.price).toFixed(2) || '0.00'}
              </span>
            </div>
            <div class="flex justify-center py-4">
              <div class="p-4 border-2 border-gray-300 rounded-md ">
                <ReviewSection product={product} server:defer />
              </div>
            </div>
            <div class="flex justify-center py-4">
              {user && (
                <Cart classes="bg-gray-300 text-gray-800 font-bold py-2 px-4 rounded flex items-center gap-2">
                  <ShoppingCart /> View Cart
                </Cart>
              )}
            </div>
          </div>
        </div>
      </div>
    ) : (
      <div class="product-details">
        <div class="product">
          <h1>Product not found</h1>
        </div>
      </div>
    )
  }
</Layout>

<script>
  import { actions } from 'astro:actions';
  const addToWishlistButton = document.querySelector('#add-to-wishlist-button');
  if (addToWishlistButton) {
    addToWishlistButton.addEventListener('click', async () => {
      const productId = addToWishlistButton.getAttribute('product-id');
      if (!productId) {
        console.error('Product ID is not set');
        return;
      }
      const { error, data } = await actions.user.toggleProductFromWishlist({
        productId: productId,
      });
      if (!error) {
        if (data.inWishlist) {
          addToWishlistButton.classList.add('add-to-wishlist-button-active');
        } else {
          addToWishlistButton.classList.remove('add-to-wishlist-button-active');
        }
      }
    });
  }
</script>
